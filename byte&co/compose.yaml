version: '3.8'

services:
  #___________Microservice Authentification
  backend-auth:
    build: ./authentification/backend
    restart: always
    ports:
      - "8080:8080"
    secrets:
      - db-password-auth
    environment:
      MYSQL_HOST: db-auth
      MYSQL_DATABASE: auth_db
      MYSQL_USER: auth_user
      MYSQL_PASSWORD_FILE: /run/secrets/db-password-auth
    networks:
      - react-spring
      - auth-mysql
    depends_on:
      db-auth:
        condition: service_healthy

  db-auth:
    image: mysql:8.0.19
    environment:
      - MYSQL_DATABASE=auth_db
      - MYSQL_USER=auth_user
      - MYSQL_PASSWORD_FILE=/run/secrets/db-password-auth
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password-auth
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 3s
      retries: 5
      start_period: 30s
    secrets:
      - db-password-auth
    volumes:
      - db-auth-data:/var/lib/mysql
    networks:
      - auth-mysql


  #___________Microservice Gestion Client
  backend-gestionclient:
    build: ./gestionclient/backend
    restart: always
    ports:
      - "8081:8080"
    secrets:
      - db-password-gestionclient
    environment:
      MYSQL_HOST: db-gestionclient
      MYSQL_DATABASE: gestionclient_db
      MYSQL_USER: gestionclient_user
      MYSQL_PASSWORD_FILE: /run/secrets/db-password-gestionclient
    networks:
      - react-spring
      - gestionclient-mysql
    depends_on:
      db-gestionclient:
        condition: service_healthy

  db-gestionclient:
    image: mysql:8.0.19
    environment:
      - MYSQL_DATABASE=gestionclient_db
      - MYSQL_USER=gestionclient_user
      - MYSQL_PASSWORD_FILE=/run/secrets/db-password-gestionclient
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password-gestionclient
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 3s
      retries: 5
      start_period: 30s
    secrets:
      - db-password-gestionclient
    volumes:
      - db-gestionclient-data:/var/lib/mysql
    networks:
      - gestionclient-mysql


  # #___________Microservice Gestion des Contrats
  # backend-gestioncontrat:
  #   build: ./gestioncontrat/backend
  #   restart: always
  #   ports:
  #     - "8082:8080"
  #   secrets:
  #     - db-password-gestioncontrat
  #   environment:
  #     MYSQL_HOST: db-gestioncontrat
  #     MYSQL_DATABASE: gestioncontrat_db
  #     MYSQL_USER: gestioncontrat_user
  #     MYSQL_PASSWORD_FILE: /run/secrets/db-password-gestioncontrat
  #   networks:
  #     - react-spring
  #     - gestioncontrat-mysql
  #   depends_on:
  #     db-gestioncontrat:
  #       condition: service_healthy

  # db-gestioncontrat:
  #   image: mysql:8.0.19
  #   environment:
  #     - MYSQL_DATABASE=gestioncontrat_db
  #     - MYSQL_USER=gestioncontrat_user
  #     - MYSQL_PASSWORD_FILE=/run/secrets/db-password-gestioncontrat
  #     - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password-gestioncontrat
  #   restart: always
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
  #     interval: 3s
  #     retries: 5
  #     start_period: 30s
  #   secrets:
  #     - db-password-gestioncontrat
  #   volumes:
  #     - db-gestioncontrat-data:/var/lib/mysql
  #   networks:
  #     - gestioncontrat-mysql


  # #___________Microservice Gestion des Offres
  # backend-gestionoffres:
  #   build: ./gestionoffres/backend
  #   restart: always
  #   ports:
  #     - "8083:8080"
  #   secrets:
  #     - db-password-gestionoffres
  #   environment:
  #     MYSQL_HOST: db-gestionoffres
  #     MYSQL_DATABASE: gestionoffres_db
  #     MYSQL_USER: gestionoffres_user
  #     MYSQL_PASSWORD_FILE: /run/secrets/db-password-gestionoffres
  #   networks:
  #     - react-spring
  #     - gestionoffres-mysql
  #   depends_on:
  #     db-gestionoffres:
  #       condition: service_healthy

  # db-gestionoffres:
  #   image: mysql:8.0.19
  #   environment:
  #     - MYSQL_DATABASE=gestionoffres_db
  #     - MYSQL_USER=gestionoffres_user
  #     - MYSQL_PASSWORD_FILE=/run/secrets/db-password-gestionoffres
  #     - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password-gestionoffres
  #   restart: always
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
  #     interval: 3s
  #     retries: 5
  #     start_period: 30s
  #   secrets:
  #     - db-password-gestionoffres
  #   volumes:
  #     - db-gestionoffres-data:/var/lib/mysql
  #   networks:
  #     - gestionoffres-mysql


  # #___________Microservice Empreinte Carbone
  # backend-empreintecarbone:
  #   build: ./empreintecarbone/backend
  #   restart: always
  #   ports:
  #     - "8084:8080"
  #   networks:
  #     - react-spring


  # #___________Microservice Gestion de Sinistre
  # backend-gestionsinistre:
  #   build: ./gestionsinistre/backend
  #   restart: always
  #   ports:
  #     - "8085:8080"
  #   secrets:
  #     - db-password-gestionsinistre
  #   environment:
  #     MYSQL_HOST: db-gestionsinistre
  #     MYSQL_DATABASE: gestionsinistre_db
  #     MYSQL_USER: gestionsinistre_user
  #     MYSQL_PASSWORD_FILE: /run/secrets/db-password-gestionsinistre
  #   networks:
  #     - react-spring
  #     - gestionsinistre-mysql
  #   depends_on:
  #     db-gestionsinistre:
  #       condition: service_healthy

  # db-gestionsinistre:
  #   image: mysql:8.0.19
  #   environment:
  #     - MYSQL_DATABASE=gestionsinistre_db
  #     - MYSQL_USER=gestionsinistre_user
  #     - MYSQL_PASSWORD_FILE=/run/secrets/db-password-gestionsinistre
  #     - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password-gestionsinistre
  #   restart: always
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
  #     interval: 3s
  #     retries: 5
  #     start_period: 30s
  #   secrets:
  #     - db-password-gestionsinistre
  #   volumes:
  #     - db-gestionsinistre-data:/var/lib/mysql
  #   networks:
  #     - gestionsinistre-mysql


#___________Frontend
  frontend:
    build:
      context: frontend
      target: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/code/src
      - /project/node_modules
    networks:
      - react-spring
    depends_on:
      - backend-auth

#___________Volumes
volumes:
  db-auth-data: {}
  db-gestionclient-data: {}
  db-gestioncontrat-data: {}
  db-gestionoffres-data: {}
  db-gestionsinistre-data: {}

#___________Secrets
secrets:
  db-password-auth:
    file: ./authentification/db/password.txt
  db-password-gestionclient:
    file: ./gestionclient/db/password.txt

#___________Networks
networks:
  react-spring: {}
  auth-mysql: {}
  gestionclient-mysql: {}
  gestioncontrat-mysql: {}
  gestionoffres-mysql: {}
  gestionsinistre-mysql: {}
